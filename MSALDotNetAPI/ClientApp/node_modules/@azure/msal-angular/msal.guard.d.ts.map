{"version":3,"file":"msal.guard.d.ts","sources":["msal.guard.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, CanLoad, UrlTree, Router } from \"@angular/router\";\r\nimport { MsalService } from \"./msal.service\";\r\nimport { Location } from \"@angular/common\";\r\nimport { MsalGuardConfiguration } from \"./msal.guard.config\";\r\nimport { Observable } from \"rxjs\";\r\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\r\nexport declare class MsalGuard implements CanActivate, CanActivateChild, CanLoad {\r\n    private msalGuardConfig;\r\n    private msalBroadcastService;\r\n    private authService;\r\n    private location;\r\n    private router;\r\n    private loginFailedRoute?;\r\n    constructor(msalGuardConfig: MsalGuardConfiguration, msalBroadcastService: MsalBroadcastService, authService: MsalService, location: Location, router: Router);\r\n    /**\r\n     * Parses url string to UrlTree\r\n     * @param url\r\n     */\r\n    parseUrl(url: string): UrlTree;\r\n    /**\r\n     * Builds the absolute url for the destination page\r\n     * @param path Relative path of requested page\r\n     * @returns Full destination url\r\n     */\r\n    getDestinationUrl(path: string): string;\r\n    /**\r\n     * Interactively prompt the user to login\r\n     * @param url Path of the requested page\r\n     */\r\n    private loginInteractively;\r\n    /**\r\n     * Helper which checks for the correct interaction type, prevents page with Guard to be set as reidrect, and calls handleRedirectObservable\r\n     * @param state\r\n     */\r\n    private activateHelper;\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree>;\r\n    canLoad(): Observable<boolean>;\r\n}\r\n"]}