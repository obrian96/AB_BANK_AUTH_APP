{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/auth-config.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\r\nimport { AuthenticationResult, EventMessage, EventType, InteractionStatus } from '@azure/msal-browser';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  loginDisplay = false;\r\n  displayedColumns: string[] = ['claim', 'value'];\r\n  dataSource: any =[];\r\n\r\n  private readonly _destroying$ = new Subject<void>();\r\n\r\n  constructor(private authService: MsalService, private msalBroadcastService: MsalBroadcastService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe((result: EventMessage) => {\r\n        if (result?.payload) {\r\n          const payload: AuthenticationResult = result.payload as AuthenticationResult\r\n          this.authService.instance.setActiveAccount(payload.account);\r\n        }\r\n      });\r\n\r\n      this.msalBroadcastService.inProgress$\r\n      .pipe(\r\n        filter((status: InteractionStatus) => status === InteractionStatus.None)\r\n      )\r\n      .subscribe(() => {\r\n        this.setLoginDisplay();\r\n        this.checkAndSetActiveAccount();\r\n        this.getClaims(this.authService.instance.getActiveAccount()?.idTokenClaims)\r\n      });\r\n\r\n  }\r\n\r\n  checkAndSetActiveAccount() {\r\n    /**\r\n     * If no active account set but there are accounts signed in, sets first account to active account\r\n     * To use active account set here, subscribe to inProgress$ first in your component\r\n     * Note: Basic usage demonstrated. Your app may require more complicated account selection logic\r\n     */\r\n    let activeAccount = this.authService.instance.getActiveAccount();\r\n\r\n    if (!activeAccount && this.authService.instance.getAllAccounts().length > 0) {\r\n      let accounts = this.authService.instance.getAllAccounts();\r\n      this.authService.instance.setActiveAccount(accounts[0]);\r\n    }\r\n  }\r\n\r\n  setLoginDisplay() {\r\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\r\n  }\r\n\r\n  getClaims(claims: any) {\r\n    this.dataSource = [\r\n      {id: 1, claim: \"Display Name\", value: claims ? claims['name'] : null},\r\n      {id: 2, claim: \"User Principal Name (UPN)\", value: claims ? claims['preferred_username'] : null},\r\n      {id: 3, claim: \"OID\", value: claims ? claims['oid']: null},\r\n      {id: 4, claim: \"Roles\", value: claims ? claims['roles']: null}\r\n    ];\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroying$.next(undefined);\r\n    this._destroying$.complete();\r\n  }\r\n}","<!-- <mat-card-actions class=\"card-section\">\r\n  <button mat-raised-button *ngIf=\"loginDisplay\" [routerLink]=\"['todo-view']\">Get My Tasks</button>\r\n  <button mat-raised-button *ngIf=\"loginDisplay\" [routerLink]=\"['dashboard']\">See All Tasks</button>\r\n</mat-card-actions> -->\r\n\r\n<h1>Hello Future</h1>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" *ngIf=\"loginDisplay\">\r\n  <!-- Claim Column -->\r\n  <ng-container matColumnDef=\"claim\">\r\n    <th mat-header-cell *matHeaderCellDef> Claim </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.claim}} </td>\r\n  </ng-container>\r\n\r\n  <!-- Value Column -->\r\n  <ng-container matColumnDef=\"value\">\r\n    <th mat-header-cell *matHeaderCellDef> Value </th>\r\n    <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n</table>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/**\r\n * This file contains authentication parameters. Contents of this file\r\n * is roughly the same across other MSAL.js libraries. These parameters\r\n * are used to initialize Angular and MSAL Angular configurations in\r\n * in app.module.ts file.\r\n */\r\n\r\nimport { LogLevel, Configuration, BrowserCacheLocation } from '@azure/msal-browser';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation. \r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \r\n */\r\nexport const msalConfig: Configuration = {\r\n    auth: {\r\n        clientId: '893d3ed6-1809-4ce7-8968-16f688207a4e', // This is the ONLY mandatory field that you need to supply.\r\n        authority: 'https://login.microsoftonline.com/02366e36-6755-4bff-9bd9-162681dec588', // Defaults to \"https://login.microsoftonline.com/common\"\r\n        redirectUri: '/', // Points to window.location.origin. You must register this URI on Azure portal/App Registration.\r\n        // redirectUri: 'https://localhost:44351', // Points to window.location.origin. You must register this URI on Azure portal/App Registration.\r\n    },\r\n    cache: {\r\n        cacheLocation: BrowserCacheLocation.LocalStorage, // Configures cache location. \"sessionStorage\" is more secure, but \"localStorage\" gives you SSO between tabs.\r\n        storeAuthStateInCookie: isIE, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n    },\r\n    system: {\r\n        loggerOptions: {\r\n            loggerCallback(logLevel: LogLevel, message: string) {\r\n                console.log(message);\r\n            },\r\n            logLevel: LogLevel.Verbose,\r\n            piiLoggingEnabled: false\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit: \r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n  scopes: []\r\n};\r\n\r\nexport const roles = {\r\n    TaskAdmin: \"TaskAdmin\",\r\n    TaskUser: \"TaskUser\"\r\n}\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { MsalService, MsalBroadcastService, MSAL_GUARD_CONFIG, MsalGuardConfiguration } from '@azure/msal-angular';\r\nimport { EventMessage, EventType, InteractionType, PopupRequest, RedirectRequest } from '@azure/msal-browser';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'Welcome!';\r\n  isIframe = false;\r\n  loginDisplay = false;\r\n  \r\n  private readonly _destroying$ = new Subject<void>();\r\n\r\n  constructor(\r\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\r\n    private authService: MsalService,\r\n    private msalBroadcastService: MsalBroadcastService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isIframe = window !== window.parent && !window.opener;\r\n\r\n    this.checkAccount();\r\n\r\n    /**\r\n     * You can subscribe to MSAL events as shown below. For more info,\r\n     * visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/events.md\r\n     */\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS || msg.eventType === EventType.ACQUIRE_TOKEN_SUCCESS),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe((result) => {\r\n        this.checkAccount();\r\n      });\r\n  }\r\n\r\n  checkAccount() {\r\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\r\n  }\r\n\r\n  login() {\r\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n      if (this.msalGuardConfig.authRequest){\r\n        this.authService.loginPopup({...this.msalGuardConfig.authRequest} as PopupRequest)\r\n          .subscribe(() => this.checkAccount());\r\n        } else {\r\n          this.authService.loginPopup()\r\n            .subscribe(() => this.checkAccount());\r\n      }\r\n    } else {\r\n      if (this.msalGuardConfig.authRequest){\r\n        this.authService.loginRedirect({...this.msalGuardConfig.authRequest} as RedirectRequest);\r\n      } else {\r\n        this.authService.loginRedirect();\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  // unsubscribe to events when component is destroyed\r\n  ngOnDestroy(): void {\r\n    this._destroying$.next(undefined);\r\n    this._destroying$.complete();\r\n  }\r\n}\r\n","<div class=\"login-page\" *ngIf=\"!loginDisplay\">\r\n  <!-- <img class=\"background-image\" *ngIf=\"!loginDisplay\">\r\n  <div class=\"bg-image-mask\" *ngIf=\"!loginDisplay\"></div> -->\r\n\r\n  <mat-card class=\"card-section\" *ngIf=\"!loginDisplay\">\r\n    <mat-card-title>Sign-in with Microsoft Azure AD</mat-card-title>\r\n    <mat-card-subtitle>Getting an access token with Azure AD and calling a ASP.NET Core Web API</mat-card-subtitle>\r\n    <mat-card-content>This simple sample demonstrates the Microsoft Authentication Library for Angular (MSAL\r\n    Angular) to get an access token and call a ASP.NET Core Web API secured by Azure AD.</mat-card-content>\r\n  </mat-card>\r\n  <div class=\"login-button-div\" *ngIf=\"!loginDisplay\">\r\n    <a href=\"#\" (click)=\"login()\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      Sign In\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n<mat-toolbar color=\"primary\" *ngIf=\"loginDisplay\">\r\n  <a class=\"title\" [routerLink]=\"['/']\">{{ title }}</a>\r\n\r\n  <div class=\"toolbar-spacer\" *ngIf=\"loginDisplay\"></div>\r\n\r\n  <!-- <button mat-raised-button *ngIf=\"!loginDisplay\" (click)=\"login()\">Login</button> -->\r\n  <button mat-raised-button color=\"accent\" *ngIf=\"loginDisplay\" (click)=\"logout()\">Logout</button>\r\n</mat-toolbar>\r\n\r\n<div class=\"container\" *ngIf=\"loginDisplay\">\r\n  <!--This is to avoid reload during acquireTokenSilent() because of hidden iframe -->\r\n  <router-outlet *ngIf=\"!isIframe\"></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { IPublicClientApplication, PublicClientApplication, InteractionType } from '@azure/msal-browser';\r\nimport { MsalGuard, MsalInterceptor, MsalBroadcastService, MsalInterceptorConfiguration, MsalModule, MsalService, MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG, MsalGuardConfiguration, MsalRedirectComponent } from '@azure/msal-angular';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { msalConfig, loginRequest } from './auth-config';\r\n\r\n/**\r\n * Here we pass the configuration parameters to create an MSAL instance.\r\n * For more info, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/configuration.md\r\n */\r\n\r\nexport function MSALInstanceFactory(): IPublicClientApplication {\r\n  return new PublicClientApplication(msalConfig);\r\n}\r\n\r\n/**\r\n * Set your default interaction type for MSALGuard here. If you have any\r\n * additional scopes you want the user to consent upon login, add them here as well.\r\n */\r\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\r\n  return { \r\n    interactionType: InteractionType.Redirect,\r\n    authRequest: loginRequest\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    HttpClientModule,\r\n    MsalModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: MsalInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory\r\n    },\r\n    {\r\n      provide: MSAL_GUARD_CONFIG,\r\n      useFactory: MSALGuardConfigFactory\r\n    },\r\n    MsalService,\r\n    MsalGuard,\r\n    MsalBroadcastService,\r\n  ],\r\n  bootstrap: [AppComponent, MsalRedirectComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MsalGuard } from '@azure/msal-angular';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RoleGuardService } from './role-guard.service';\r\n\r\nimport { roles } from './auth-config';\r\n\r\n/**\r\n * MSAL Angular can protect routes in your application\r\n * using MsalGuard. For more info, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/initialization.md#secure-the-routes-in-your-application\r\n */\r\nconst routes: Routes = [\r\n  {\r\n    // Needed for hash routing\r\n    path: 'state',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'code',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'error',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\nconst isIframe = window !== window.parent && !window.opener;\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n    useHash: true,\r\n    // Don't perform initial navigation in iframes\r\n    initialNavigation: !isIframe ? 'enabled' : 'disabled'\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}